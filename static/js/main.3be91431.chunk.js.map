{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","constant/index.js","components/PostList.js","components/App.js","reducers/postsReducer.js","reducers/usersReducer.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","fetchUser","id","dispatch","a","async","jsonPlaceholder","get","response","type","payload","data","PostList","user","this","props","name","React","Component","connect","state","ownProps","users","find","userId","avatars","fetchPostsAndUsers","posts","map","post","title","body","avatar","length","className","key","src","alt","UserHeader","renderList","getState","Set","forEach","App","postsReducer","usersReducer","combineReducers","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"0SAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,yCCWEC,EAAY,SAACC,GAAD,OAAQ,SAAOC,GAAP,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACRE,EAAgBC,IAAhB,iBAA8BL,KADtB,OACzBM,EADyB,OAG/BL,EAAS,CACPM,KAfsB,aAgBtBC,QAASF,EAASG,OALW,uCCX3BC,E,iLACM,IACAC,EAASC,KAAKC,MAAdF,KACR,OAAKA,EACE,8BAAOA,EAAKG,MADD,S,GAHCC,IAAMC,WAcdC,eANS,SAACC,EAAOC,GAG9B,MAAO,CAAER,KAFSO,EAAVE,MACWC,MAAK,SAACV,GAAD,OAAUA,EAAKX,KAAOmB,EAASG,aAI1CL,CAAyBP,GCjB3Ba,EAAU,CAAC,MAAO,YAAa,QAAS,SAAU,SAAU,SAAU,OAAQ,QAAS,YCM9Fb,E,4LAEFE,KAAKC,MAAMW,uB,mCAKX,OADkBZ,KAAKC,MAAfY,MACKC,KAAI,SAACC,GAAU,IAClB3B,EAA4B2B,EAA5B3B,GAAIsB,EAAwBK,EAAxBL,OAAQM,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KACrBC,EAASP,EAAQD,EAASC,EAAQQ,QACxC,OACE,yBAAKC,UAAU,UAAUC,IAAKjC,GAC5B,yBAAKgC,UAAU,iBACb,yBAAKE,IAAG,sDAAiDJ,EAAjD,QAA+DK,IAAI,MAE7E,yBAAKH,UAAU,WACb,yBAAKA,UAAU,UAAUJ,GACzB,yBAAKI,UAAU,QACb,kBAACI,EAAD,CAAYd,OAAQA,KAEtB,yBAAKU,UAAU,eACb,2BAAIH,W,+BASd,OAAO,yBAAKG,UAAU,4BAA4BpB,KAAKyB,kB,GA9BpCtB,IAAMC,WAuCdC,eALS,SAACC,GAEvB,MAAO,CAAEO,MADSP,EAAVO,SAI8B,CAAED,mBHtBR,kBAAM,SAAOvB,EAAUqC,GAAjB,iBAAApC,EAAAC,OAAA,kEAAAD,EAAA,MAChCD,GAnBwB,SAAOA,GAAP,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACPE,EAAgBC,IAAI,WADb,OACxBC,EADwB,OAG9BL,EAAS,CACPM,KAPuB,cAQvBC,QAASF,EAASG,OALU,yCAkBQ,SAEpB6B,IAAVb,EAF8B,EAE9BA,MACQ,IAAIc,IAAId,EAAMC,KAAI,SAACC,GAAD,OAAUA,EAAKL,WACzCkB,SAAQ,SAACxC,GAAD,OAAQC,EAASF,EAAUC,OAJL,wCGsBzBiB,CAAiDP,GClCjD+B,EARH,WACV,OACE,yBAAKT,UAAU,+BACb,kBAAC,EAAD,QCKSU,EATM,WAAoC,IAAnCxB,EAAkC,uDAA1B,GAA0B,yCAApBX,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACxC,OAAQD,GACN,ILFuB,cKGrB,OAAOC,EACT,QACE,OAAOU,I,QCIEyB,EATM,WAAoC,IAAnCzB,EAAkC,uDAA1B,GAA0B,yCAApBX,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACxC,OAAQD,GACN,INDsB,aMEpB,MAAM,GAAN,mBAAWW,GAAX,CAAkBV,IACpB,QACE,OAAOU,ICHE0B,cAAgB,CAC7BnB,MAAOiB,EACPtB,MAAOuB,ICGHE,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.3be91431.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com'\n});\n","import jsonPlaceholder from '../apis/jsonPlaceholder';\n\nexport const FETCH_POSTS = 'FETCH_POSTS';\nexport const FETCH_USER = 'FETCH_USER';\n\nexport const fetchPosts = () => async (dispatch) => {\n  const response = await jsonPlaceholder.get('/posts');\n\n  dispatch({\n    type: FETCH_POSTS,\n    payload: response.data\n  });\n}\n\nexport const fetchUser = (id) => async (dispatch) => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n\n  dispatch({\n    type: FETCH_USER,\n    payload: response.data\n  });\n}\n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n  const { posts } = getState();\n  const userIds = new Set(posts.map((post) => post.userId));\n  userIds.forEach((id) => dispatch(fetchUser(id)));\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass PostList extends React.Component {\n  render() {\n    const { user } = this.props;\n    if (!user) return null;\n    return <span>{user.name}</span>;\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { users } = state;\n  const user = users.find((user) => user.id === ownProps.userId);\n  return { user };\n};\n\nexport default connect(mapStateToProps)(PostList);\n","export const avatars = ['tom', 'christian', 'helen', 'elliot', 'daniel', 'stevie', 'matt', 'jenny', 'veronika'];","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPostsAndUsers } from '../actions';\nimport UserHeader from './UserHeader';\nimport { avatars } from '../constant';\n\nclass PostList extends React.Component {\n  componentDidMount() {\n    this.props.fetchPostsAndUsers();\n  }\n\n  renderList() {\n    const { posts } = this.props;\n    return posts.map((post) => {\n      const { id, userId, title, body } = post;\n      const avatar = avatars[userId % avatars.length];\n      return (\n        <div className=\"ui item\" key={id}>\n          <div className=\"ui tiny image\">\n            <img src={`https://semantic-ui.com/images/avatar/large/${avatar}.jpg`} alt=\"\" />\n          </div>\n          <div className=\"content\">\n            <div className=\"header\">{title}</div>\n            <div className=\"meta\">\n              <UserHeader userId={userId} />\n            </div>\n            <div className=\"description\">\n              <p>{body}</p>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div className=\"ui relaxed divided items\">{this.renderList()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { posts } = state;\n  return { posts };\n}\n\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);\n","import React from 'react';\nimport PostList from './PostList';\n\nconst App = () => {\n  return (\n    <div className=\"ui raised container segment\">\n      <PostList />\n    </div>\n  )\n}\n\nexport default App;\n","import { FETCH_POSTS } from '../actions';\n\nconst postsReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case FETCH_POSTS:\n      return payload;\n    default:\n      return state;\n  }\n}\n\nexport default postsReducer;","import { FETCH_USER } from '../actions';\n\nconst usersReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case FETCH_USER:\n      return [...state, payload];\n    default:\n      return state;\n  }\n}\n\nexport default usersReducer;","import { combineReducers } from 'redux';\nimport postsReducer from './postsReducer';\nimport usersReducer from './usersReducer';\n\nexport default combineReducers({\n  posts: postsReducer,\n  users: usersReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}